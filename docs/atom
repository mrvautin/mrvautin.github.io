<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://localhost:4965</id>
    <title>squido</title>
    <updated>2021-04-03T10:06:18.517Z</updated>
    <generator>squido</generator>
    <link rel="alternate" href="http://localhost:4965"/>
    <link rel="self" href="http://localhost:4965/atom"/>
    <subtitle>This is the blog description</subtitle>
    <icon>http://localhost:4965/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[Getting started]]></title>
        <id>http://localhost:4965/getting-started</id>
        <link href="http://localhost:4965/getting-started"/>
        <updated>2021-04-01T15:29:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with squido]]></summary>
        <content type="html"><![CDATA[<img src="https://raw.githubusercontent.com/mrvautin/squido/main/docs/images/squido.svg" width="200px" height="200px">
<h2>What is squido?</h2>
<p><code>squido</code> is a dead simple static website builder which can be hosted anywhere for super fast websites and very little effort.</p>
<p>The idea is to be a <code>no code</code> setup and have everything you need to run and host a website. You simply do the writing and customization of style and layout.</p>
<h2>Installation</h2>
<p>Simply install the <code>squido</code> cli module globally in order to build and manage your static site.</p>
<p>With npm</p>
<pre><code class="language-bash">npm <span class="hljs-keyword">install</span> -g squido
</code></pre>
<p>Or with Yarn</p>
<pre><code class="language-bash"><span class="hljs-symbol">yarn</span> <span class="hljs-meta">global</span> <span class="hljs-keyword">add</span> squido
</code></pre>
<p>Make your website directory:</p>
<pre><code class="language-bash"><span class="hljs-keyword">mkdir</span> <span class="hljs-keyword">my</span>-squido-website
</code></pre>
<p>Enter your new website directory:</p>
<pre><code class="language-bash">cd <span class="hljs-keyword">my</span>-squido-website
</code></pre>
<h2>Demo</h2>
<p>Blog style: <a href="https://squido.netlify.app">https://squido.netlify.app</a></p>
<p>Documentation style: This website</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Structure]]></title>
        <id>http://localhost:4965/structure</id>
        <link href="http://localhost:4965/structure"/>
        <updated>2021-04-01T15:28:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido structure]]></summary>
        <content type="html"><![CDATA[<p>You can start by grabbing everything in the <code>/source</code> directory of <a href="https://github.com/mrvautin/squido/tree/main/source">here</a>.</p>
<pre><code>project
│   config<span class="hljs-selector-class">.js</span> 
│
└───source
│   index<span class="hljs-selector-class">.hbs</span>
│   post<span class="hljs-selector-class">.hbs</span>
│   page<span class="hljs-selector-class">.hbs</span>
│   tag<span class="hljs-selector-class">.hbs</span>
│   package<span class="hljs-selector-class">.json</span>
│   │
│   └───posts
│   │   post1<span class="hljs-selector-class">.markdown</span>
│   │   post2<span class="hljs-selector-class">.markdown</span>
│   │
│   └───layouts
│   │   layout<span class="hljs-selector-class">.hbs</span>
│   │
│   └───<span class="hljs-attribute">content</span>
│       └───images
│       │
│       └───javascripts
│       │
│       └───stylesheets
</code></pre>
<p>The <code>/&lt;source_dir&gt;</code> directory is the default directory for all the source files. You can change by adding another directory in the <code>sourceDir</code> of the <code>config.js</code> file.</p>
<p>The <code>index.hbs</code>, <code>post.hbs</code>, <code>page.hbs</code> and <code>tag.hbs</code> files are used to insert into your template. The <code>index.hbs</code> is the root of your website, <code>post.hbs</code> will render the contents of the <code>.markdown</code> files and <code>page.hbs</code> and <code>tag.hbs</code> are used to build pagination and tag aggregation.</p>
<p>Your posts go in the <code>/&lt;source_dir&gt;/posts</code> directory. You will have <code>.markdown</code> files for each post/page you want.</p>
<p>The <code>content</code> directory contains the files used for your website. Eg: Stylesheets, images, javascript files etc.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Usage / Commands]]></title>
        <id>http://localhost:4965/usage-commands</id>
        <link href="http://localhost:4965/usage-commands"/>
        <updated>2021-04-01T15:27:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido commands]]></summary>
        <content type="html"><![CDATA[<p>The CLI comes with a few commands.</p>
<pre><code class="language-bash">Usage: cli [<span class="hljs-keyword">options</span>] [<span class="hljs-keyword">command</span>]

Option<span class="hljs-variable">s:</span>
  -V, --<span class="hljs-keyword">version</span>    output the <span class="hljs-keyword">version</span> <span class="hljs-keyword">number</span>
  -h, --<span class="hljs-keyword">help</span>       output usage information

Command<span class="hljs-variable">s:</span>
  build [<span class="hljs-keyword">options</span>]  Builds your website
  clean            Clean your website build
  serve [<span class="hljs-keyword">options</span>]  Serves website
</code></pre>
<h4>Build command</h4>
<p>The <code>build</code> command has the following options:</p>
<pre><code class="language-bash"><span class="hljs-symbol">Usage:</span> <span class="hljs-keyword">build </span>[options]

<span class="hljs-keyword">Builds </span>your website
<span class="hljs-symbol">
Options:</span>
  -c --clean  Cleans <span class="hljs-keyword">build </span><span class="hljs-keyword">directory
</span>  -h, --help  output usage information
</code></pre>
<h4>Clean command</h4>
<p>The <code>clean</code> command has the following options:</p>
<pre><code class="language-bash">Usage: clean [<span class="hljs-meta">options</span>]

Clean your website build

<span class="hljs-meta">Options</span>:
  -h, --help  <span class="hljs-meta">output</span> usage information
</code></pre>
<h4>Serve command</h4>
<p>The <code>serve</code> command has the following options:</p>
<pre><code class="language-bash"><span class="hljs-symbol">Usage:</span> serve [options]

Serves website
<span class="hljs-symbol">
Options:</span>
  -w --watch  Watches for changes
  -<span class="hljs-keyword">b </span>--<span class="hljs-keyword">build </span> <span class="hljs-keyword">Builds </span>on start
  -c --clean  Cleans <span class="hljs-keyword">build </span><span class="hljs-keyword">directory
</span>  -h, --help  output usage information
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Configuration]]></title>
        <id>http://localhost:4965/configuration</id>
        <link href="http://localhost:4965/configuration"/>
        <updated>2021-04-01T15:26:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido configuration]]></summary>
        <content type="html"><![CDATA[<p>An example config can be seen below. You can see that you can specify different values for different environments you run. <code>development</code> and <code>production</code> are examples but they need to match up with whatever <code>NODE_ENV</code> is set. If one is not set, the default is <code>development</code>.</p>
<pre><code class="language-javascript"><span class="hljs-string">const</span> <span class="hljs-string">config</span> <span class="hljs-string">=</span> {
    <span class="hljs-attr">development:</span> {
        <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;squido&#x27;</span>,
        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;This is the blog description&#x27;</span>,
        <span class="hljs-attr">twitterHandle:</span> <span class="hljs-string">&#x27;@mrvautin&#x27;</span>,
        <span class="hljs-attr">baseUrl:</span> <span class="hljs-string">&#x27;http://localhost:4965&#x27;</span>,
        <span class="hljs-attr">sourcesExt:</span> <span class="hljs-string">&#x27;markdown&#x27;</span>,
        <span class="hljs-attr">sourceDir:</span> <span class="hljs-string">&#x27;source&#x27;</span>,
        <span class="hljs-attr">buildDir:</span> <span class="hljs-string">&#x27;build&#x27;</span>,
        <span class="hljs-attr">summaryLength:</span> <span class="hljs-number">250</span>,
        <span class="hljs-attr">port:</span> <span class="hljs-number">4965</span>,
        <span class="hljs-attr">pagination:</span> <span class="hljs-literal">true</span>,
        <span class="hljs-attr">postPerPage:</span> <span class="hljs-number">8</span>
    },
    <span class="hljs-attr">production:</span> {
        <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;squido&#x27;</span>,
        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;This is the blog description&#x27;</span>,
        <span class="hljs-attr">twitterHandle:</span> <span class="hljs-string">&#x27;@mrvautin&#x27;</span>,
        <span class="hljs-attr">baseUrl:</span> <span class="hljs-string">&#x27;http://example.com&#x27;</span>,
        <span class="hljs-attr">sourcesExt:</span> <span class="hljs-string">&#x27;markdown&#x27;</span>,
        <span class="hljs-attr">sourceDir:</span> <span class="hljs-string">&#x27;source&#x27;</span>,
        <span class="hljs-attr">buildDir:</span> <span class="hljs-string">&#x27;build&#x27;</span>,
        <span class="hljs-attr">summaryLength:</span> <span class="hljs-number">250</span>,
        <span class="hljs-attr">port:</span> <span class="hljs-number">4965</span>,
        <span class="hljs-attr">pagination:</span> <span class="hljs-literal">true</span>,
        <span class="hljs-attr">postPerPage:</span> <span class="hljs-number">8</span>
    }
}<span class="hljs-string">;</span>

<span class="hljs-string">module.exports</span> <span class="hljs-string">=</span> <span class="hljs-string">config;</span>
</code></pre>
<p>The configuration options are self explanatory. You can use any of the config in your template files using <code>{{meta.config.&lt;option&gt;}}</code>. Eg: For example <code>{{meta.config.baseUrl}}</code>.</p>
<p>This is a static website so the <code>port</code> is used for spinning up a Web Server for development.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Posts]]></title>
        <id>http://localhost:4965/posts</id>
        <link href="http://localhost:4965/posts"/>
        <updated>2021-04-01T15:25:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido post structure]]></summary>
        <content type="html"><![CDATA[<p>Posts have a meta data component at the top of the file which directs how the file is built. The meta data is <code>yaml</code> formatted and sits between two <code>---</code> tags. Eg:</p>
<pre><code class="language-yaml"><span class="hljs-meta">---</span>
<span class="hljs-attr">title:</span> <span class="hljs-string">Caede</span> <span class="hljs-string">virides</span> <span class="hljs-string">oculos</span> <span class="hljs-string">armentis</span>
<span class="hljs-attr">permalink:</span> <span class="hljs-string">caede-virides-oculos-armentis</span>
<span class="hljs-attr">description:</span> <span class="hljs-string">Caede</span> <span class="hljs-string">virides</span> <span class="hljs-string">oculos</span> <span class="hljs-string">armentis</span>
<span class="hljs-attr">date:</span> <span class="hljs-string">&#x27;2021-03-11 19:17:00&#x27;</span>
<span class="hljs-attr">ignore:</span> <span class="hljs-literal">true</span>
<span class="hljs-attr">hidden:</span> <span class="hljs-literal">false</span>
<span class="hljs-attr">tags:</span> 
  <span class="hljs-bullet">-</span> <span class="hljs-string">alter</span>
  <span class="hljs-bullet">-</span> <span class="hljs-string">tradere</span>
<span class="hljs-meta">---
</span></code></pre>
<p>You can add any data values your like but the example layouts uses the <code>title</code> and <code>description</code> for SEO for page title.</p>
<p>New meta data values can be access in the layouts using <code>{{meta.&lt;new value&gt;}}</code>.</p>
<p>The permalink is required. Its used to build the URL for your website: Eg. The above will output a post at: <code>https://example.com/caede-virides-oculos-armentis</code></p>
<p>The <code>ignore</code> and <code>hidden</code> are optional tags for controlling the visibility of posts.</p>
<ul>
<li><code>ignore</code>: If set to <code>true</code>, the post will not be in the pagination and won't show on the index page.</li>
<li><code>hidden</code>: If set to <code>true</code>, the post will not be in the sitemap and RSS feeds.</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sitemap and Feeds]]></title>
        <id>http://localhost:4965/sitemap-and-feeds</id>
        <link href="http://localhost:4965/sitemap-and-feeds"/>
        <updated>2021-04-01T15:24:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido sitemap and feeds]]></summary>
        <content type="html"><![CDATA[<p>A website sitemap is automatically built and can be found at <code>/sitemap.xml</code>. Eg: <code>example.com/sitemap.xml</code></p>
<p>RSS/Atom/JSON feeds are also automatically built and can be found at:</p>
<ul>
<li><code>/rss</code>. Eg: <code>example.com/rss</code></li>
<li><code>/atom</code>. Eg: <code>example.com/atom</code></li>
<li><code>/json</code>. Eg: <code>example.com/json</code></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building]]></title>
        <id>http://localhost:4965/building</id>
        <link href="http://localhost:4965/building"/>
        <updated>2021-04-01T15:23:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido building]]></summary>
        <content type="html"><![CDATA[<p>The build task minifies your javascript and stylesheet files. Its recommended to setup your templates to use the <code>fileEnv</code> value to toggle between the full and minified CSS/Js depending on the environment set.</p>
<p>Eg: <code>production</code> will set the link to <code>.min</code>.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deployment and hosting]]></title>
        <id>http://localhost:4965/deployment-and-hosting</id>
        <link href="http://localhost:4965/deployment-and-hosting"/>
        <updated>2021-04-01T15:22:00.000Z</updated>
        <summary type="html"><![CDATA[Getting started with the squido deploying and hosting your website]]></summary>
        <content type="html"><![CDATA[<p>You can host this website anywhere static websites are supported. Some options are <a href="https://www.netlify.com">https://www.netlify.com</a> as the deployments are just dead simple.</p>
<p>Simply connect your Git repo and set the <code>Build settings</code> settings like below:</p>
<img src="https://raw.githubusercontent.com/mrvautin/squido/main/docs/images/netlify.png" width="800px" height="auto">]]></content>
    </entry>
</feed>